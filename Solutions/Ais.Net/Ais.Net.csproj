<Project Sdk="Microsoft.NET.Sdk">

  <Import Project="..\Common.Net.proj" />

  <PropertyGroup>
    <!--
    We need to target multiple versions, because .NET Standard 2.0's Stream.Read doesn't
    support Memory<T>, which is important for performance.
    We target .NET Standard 2.0, because that offers maximum reach (and in particular, enables
    .NET Framework projects to use this library).
    We target .NET Standard 2.1 because that adds Memory<T> support to Stream.Read, meaning that
    we will be able to get full performance on all .NET runtimes that support netstandard2.1
    We also target .NET Core App 2.1 because that runtime also offers the Memory<T> support on
    Stream.Read, but it does not support .NET Standard 2.1. So to offer the best possible
    performance on that runtime, we have to offer a version that targets it. This matters
    because .NET Core App 2.1 will remain in LTS (long term support) for a while.
    -->
    <TargetFramework>net6.0</TargetFramework>
  </PropertyGroup>

  <PropertyGroup>
    <PackageLicenseExpression>AGPL-3.0-only</PackageLicenseExpression>
    <PackageDescription>High performance, zero allocation AIS message decoder, which can process millions of AIVDM/AIVDO sentences per second on a single core. Sponsored by endjin.</PackageDescription>
    <PackageTags>ais;aisvdm;aivdo;nmea;marine;gis;iot;aiforearth;endjin</PackageTags>
    <PackageReleaseNotes></PackageReleaseNotes>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="System.IO.Pipelines" Version="6.0.0" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Update="Microsoft.SourceLink.GitHub" Version="1.1.1">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

</Project>
